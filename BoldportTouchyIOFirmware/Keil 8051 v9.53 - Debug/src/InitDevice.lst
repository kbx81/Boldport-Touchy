C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\kburzin
                    -ski\SimplicityStudio\v4_workspace\BoldportTouchyIOFirmware\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WAR
                    -NINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kburzinski\Sim
                    -plicityStudio\v4_workspace\BoldportTouchyIOFirmware\inc\config;C:/Users/kburzinski/SimplicityStudio/v4_workspace/Boldpor
                    -tTouchyIOFirmware/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/shared/si8051base;C:/Silicon
                    -Labs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/EFM8SB1/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdk
                    -s/8051/v4.0.4//Lib/efm8_capsense;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/EFM8SB1/efm8_caps
                    -ense/device_layer) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8SB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          
  18          #include "cslib.h"
  19          // [Library Includes]$
  20          
  21          //==============================================================================
  22          // enter_DefaultMode_from_RESET
  23          //==============================================================================
  24          extern void enter_DefaultMode_from_RESET(void) {
  25   1              // $[Config Calls]
  26   1              // Save the SFRPAGE
  27   1              uint8_t SFRPAGE_save = SFRPAGE;
  28   1              PCA_0_enter_DefaultMode_from_RESET();
  29   1              PCACH_0_enter_DefaultMode_from_RESET();
  30   1              PCACH_1_enter_DefaultMode_from_RESET();
  31   1              PCACH_2_enter_DefaultMode_from_RESET();
  32   1              PORTS_0_enter_DefaultMode_from_RESET();
  33   1              PORTS_1_enter_DefaultMode_from_RESET();
  34   1              PBCFG_0_enter_DefaultMode_from_RESET();
  35   1              RSTSRC_0_enter_DefaultMode_from_RESET();
  36   1              RTC_0_enter_DefaultMode_from_RESET();
  37   1              CLOCK_0_enter_DefaultMode_from_RESET();
  38   1              FLASH_0_enter_DefaultMode_from_RESET();
  39   1              TIMER01_0_enter_DefaultMode_from_RESET();
  40   1              TIMER16_3_enter_DefaultMode_from_RESET();
  41   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  42   1              UART_0_enter_DefaultMode_from_RESET();
  43   1              CSLIB_0_enter_DefaultMode_from_RESET();
  44   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  45   1              // Restore the SFRPAGE
  46   1              SFRPAGE = SFRPAGE_save;
  47   1              // [Config Calls]$
  48   1      
  49   1      }
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 2   

  50          
  51          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
  52   1              // $[XBR2 - Port I/O Crossbar 2]
  53   1              /***********************************************************************
  54   1               - Weak Pullups disabled
  55   1               - Crossbar enabled
  56   1               ***********************************************************************/
  57   1              SFRPAGE = 0x00;
  58   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_DISABLED | XBR2_XBARE__ENABLED;
  59   1              // [XBR2 - Port I/O Crossbar 2]$
  60   1      
  61   1              // $[XBR0 - Port I/O Crossbar 0]
  62   1              /***********************************************************************
  63   1               - UART TX, RX routed to Port pins P0.4 and P0.5
  64   1               - SPI I/O unavailable at Port pins
  65   1               - SMBus 0 I/O unavailable at Port pins
  66   1               - CP0 unavailable at Port pin
  67   1               - Asynchronous CP0 unavailable at Port pin
  68   1               - SYSCLK unavailable at Port pin
  69   1               ***********************************************************************/
  70   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
  71   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED
  72   1                              | XBR0_SYSCKE__DISABLED;
  73   1              // [XBR0 - Port I/O Crossbar 0]$
  74   1      
  75   1              // $[XBR1 - Port I/O Crossbar 1]
  76   1              /***********************************************************************
  77   1               - CEX0, CEX1 routed to Port pins
  78   1               - ECI unavailable at Port pin
  79   1               - T0 unavailable at Port pin
  80   1               - T1 unavailable at Port pin
  81   1               ***********************************************************************/
  82   1              XBR1 = XBR1_PCA0ME__CEX0_CEX1 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
  83   1                              | XBR1_T1E__DISABLED;
  84   1              // [XBR1 - Port I/O Crossbar 1]$
  85   1      
  86   1      }
  87          
  88          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
  89   1              // $[PCA0MD - PCA Mode]
  90   1              /***********************************************************************
  91   1               - Disable Watchdog Timer
  92   1               - System clock divided by 12
  93   1               - PCA continues to function normally while the system controller is in
  94   1               Idle Mode
  95   1               - Disable the CF interrupt
  96   1               - Disable Watchdog Timer
  97   1               - Watchdog Timer Enable unlocked
  98   1               ***********************************************************************/
  99   1              SFRPAGE = 0x00;
 100   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
 101   1              PCA0MD = PCA0MD_CPS__SYSCLK_DIV_12 | PCA0MD_CIDL__NORMAL
 102   1                              | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
 103   1                              | PCA0MD_WDLCK__UNLOCKED;
 104   1              // [PCA0MD - PCA Mode]$
 105   1      
 106   1              // $[PCA0H - PCA Counter/Timer High Byte]
 107   1              // [PCA0H - PCA Counter/Timer High Byte]$
 108   1      
 109   1              // $[PCA0L - PCA Counter/Timer Low Byte]
 110   1              // [PCA0L - PCA Counter/Timer Low Byte]$
 111   1      
 112   1              // $[PCA0PWM - PCA PWM Configuration]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 3   

 113   1              // [PCA0PWM - PCA PWM Configuration]$
 114   1      
 115   1              // $[PCA0CN0 - PCA Control 0]
 116   1              /***********************************************************************
 117   1               - Start the PCA Counter/Timer running
 118   1               ***********************************************************************/
 119   1              PCA0CN0 |= PCA0CN0_CR__RUN;
 120   1              // [PCA0CN0 - PCA Control 0]$
 121   1      
 122   1      }
 123          
 124          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
 125   1              // $[PCA0 Settings Save]
 126   1              // Select Capture/Compare register)
 127   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 128   1              // [PCA0 Settings Save]$
 129   1      
 130   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 131   1              /***********************************************************************
 132   1               - Disable negative edge capture
 133   1               - Disable CCF2 interrupts
 134   1               - Enable match function
 135   1               - 8 to 11-bit PWM selected
 136   1               - Disable positive edge capture
 137   1               - Disable comparator function
 138   1               - Disable PWM function
 139   1               - Disable toggle function
 140   1               ***********************************************************************/
 141   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 142   1                              | PCA0CPM2_MAT__ENABLED | PCA0CPM2_PWM16__8_BIT
 143   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__DISABLED
 144   1                              | PCA0CPM2_PWM__DISABLED | PCA0CPM2_TOG__DISABLED;
 145   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 146   1      
 147   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 148   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 149   1      
 150   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 151   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 152   1      
 153   1              // $[Auto-reload]
 154   1              // [Auto-reload]$
 155   1      
 156   1              // $[PCA0 Settings Restore]
 157   1              // [PCA0 Settings Restore]$
 158   1      
 159   1      }
 160          
 161          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 162   1              // $[P0 - Port 0 Pin Latch]
 163   1              // [P0 - Port 0 Pin Latch]$
 164   1      
 165   1              // $[P0MDOUT - Port 0 Output Mode]
 166   1              /***********************************************************************
 167   1               - P0.0 output is open-drain
 168   1               - P0.1 output is open-drain
 169   1               - P0.2 output is open-drain
 170   1               - P0.3 output is open-drain
 171   1               - P0.4 output is push-pull
 172   1               - P0.5 output is open-drain
 173   1               - P0.6 output is open-drain
 174   1               - P0.7 output is open-drain
 175   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 4   

 176   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 177   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 178   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 179   1                              | P0MDOUT_B6__OPEN_DRAIN | P0MDOUT_B7__OPEN_DRAIN;
 180   1              // [P0MDOUT - Port 0 Output Mode]$
 181   1      
 182   1              // $[P0MDIN - Port 0 Input Mode]
 183   1              /***********************************************************************
 184   1               - P0.0 pin is configured for digital mode
 185   1               - P0.1 pin is configured for analog mode
 186   1               - P0.2 pin is configured for analog mode
 187   1               - P0.3 pin is configured for analog mode
 188   1               - P0.4 pin is configured for digital mode
 189   1               - P0.5 pin is configured for digital mode
 190   1               - P0.6 pin is configured for analog mode
 191   1               - P0.7 pin is configured for digital mode
 192   1               ***********************************************************************/
 193   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__ANALOG | P0MDIN_B2__ANALOG
 194   1                              | P0MDIN_B3__ANALOG | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 195   1                              | P0MDIN_B6__ANALOG | P0MDIN_B7__DIGITAL;
 196   1              // [P0MDIN - Port 0 Input Mode]$
 197   1      
 198   1              // $[P0SKIP - Port 0 Skip]
 199   1              /***********************************************************************
 200   1               - P0.0 pin is not skipped by the crossbar
 201   1               - P0.1 pin is skipped by the crossbar
 202   1               - P0.2 pin is skipped by the crossbar
 203   1               - P0.3 pin is skipped by the crossbar
 204   1               - P0.4 pin is not skipped by the crossbar
 205   1               - P0.5 pin is not skipped by the crossbar
 206   1               - P0.6 pin is skipped by the crossbar
 207   1               - P0.7 pin is not skipped by the crossbar
 208   1               ***********************************************************************/
 209   1              P0SKIP = P0SKIP_B0__NOT_SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 210   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 211   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__SKIPPED
 212   1                              | P0SKIP_B7__NOT_SKIPPED;
 213   1              // [P0SKIP - Port 0 Skip]$
 214   1      
 215   1              // $[P0MASK - Port 0 Mask]
 216   1              // [P0MASK - Port 0 Mask]$
 217   1      
 218   1              // $[P0MAT - Port 0 Match]
 219   1              // [P0MAT - Port 0 Match]$
 220   1      
 221   1              // $[P0DRV - Port 0 Drive Strength]
 222   1              // [P0DRV - Port 0 Drive Strength]$
 223   1      
 224   1      }
 225          
 226          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 227   1              // $[Missing Pin Skip]
 228   1              // [Missing Pin Skip]$
 229   1      
 230   1              // $[P1 - Port 1 Pin Latch]
 231   1              // [P1 - Port 1 Pin Latch]$
 232   1      
 233   1              // $[P1MDOUT - Port 1 Output Mode]
 234   1              // [P1MDOUT - Port 1 Output Mode]$
 235   1      
 236   1              // $[P1MDIN - Port 1 Input Mode]
 237   1              /***********************************************************************
 238   1               - P1.0 pin is configured for digital mode
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 5   

 239   1               - P1.1 pin is configured for analog mode
 240   1               - P1.2 pin is configured for analog mode
 241   1               - P1.3 pin is configured for analog mode
 242   1               - P1.4 pin is configured for analog mode
 243   1               - P1.5 pin is configured for analog mode
 244   1               - P1.6 pin is configured for digital mode
 245   1               - P1.7 pin is configured for digital mode
 246   1               ***********************************************************************/
 247   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__ANALOG | P1MDIN_B2__ANALOG
 248   1                              | P1MDIN_B3__ANALOG | P1MDIN_B4__ANALOG | P1MDIN_B5__ANALOG
 249   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 250   1              // [P1MDIN - Port 1 Input Mode]$
 251   1      
 252   1              // $[P1SKIP - Port 1 Skip]
 253   1              /***********************************************************************
 254   1               - P1.0 pin is skipped by the crossbar
 255   1               - P1.1 pin is skipped by the crossbar
 256   1               - P1.2 pin is skipped by the crossbar
 257   1               - P1.3 pin is skipped by the crossbar
 258   1               - P1.4 pin is skipped by the crossbar
 259   1               - P1.5 pin is skipped by the crossbar
 260   1               - P1.6 pin is skipped by the crossbar
 261   1               - P1.7 pin is skipped by the crossbar
 262   1               ***********************************************************************/
 263   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 264   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 265   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 266   1              // [P1SKIP - Port 1 Skip]$
 267   1      
 268   1              // $[P1MASK - Port 1 Mask]
 269   1              // [P1MASK - Port 1 Mask]$
 270   1      
 271   1              // $[P1MAT - Port 1 Match]
 272   1              // [P1MAT - Port 1 Match]$
 273   1      
 274   1              // $[P1DRV - Port 1 Drive Strength]
 275   1              /***********************************************************************
 276   1               - P1.0 output has high output drive strength
 277   1               - P1.1 output has low output drive strength
 278   1               - P1.2 output has low output drive strength
 279   1               - P1.3 output has low output drive strength
 280   1               - P1.4 output has low output drive strength
 281   1               - P1.5 output has low output drive strength
 282   1               - P1.6 output has low output drive strength
 283   1               - P1.7 output has low output drive strength
 284   1               ***********************************************************************/
 285   1              SFRPAGE = 0x0F;
 286   1              P1DRV = P1DRV_B0__HIGH_DRIVE | P1DRV_B1__LOW_DRIVE | P1DRV_B2__LOW_DRIVE
 287   1                              | P1DRV_B3__LOW_DRIVE | P1DRV_B4__LOW_DRIVE | P1DRV_B5__LOW_DRIVE
 288   1                              | P1DRV_B6__LOW_DRIVE | P1DRV_B7__LOW_DRIVE;
 289   1              // [P1DRV - Port 1 Drive Strength]$
 290   1      
 291   1      }
 292          
 293          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 294   1              // $[CLKSEL - Clock Select]
 295   1              /***********************************************************************
 296   1               - SYSCLK is equal to selected clock source divided by 1
 297   1               - Clock derived from the Internal Low Power Oscillator
 298   1               ***********************************************************************/
 299   1              CLKSEL = CLKSEL_CLKDIV__SYSCLK_DIV_1 | CLKSEL_CLKSL__LPOSC;
 300   1              // Wait for the clock to be ready
 301   1              while ((CLKSEL & CLKSEL_CLKRDY__BMASK) != CLKSEL_CLKRDY__SET)
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 6   

 302   1                      ;
 303   1              // [CLKSEL - Clock Select]$
 304   1      
 305   1      }
 306          
 307          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 308   1              // $[PCA0 Settings Save]
 309   1              // Select Capture/Compare register)
 310   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 311   1              // [PCA0 Settings Save]$
 312   1      
 313   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
 314   1              /***********************************************************************
 315   1               - Disable negative edge capture
 316   1               - Disable CCF0 interrupts
 317   1               - Disable match function
 318   1               - 8 to 11-bit PWM selected
 319   1               - Disable positive edge capture
 320   1               - Enable comparator function
 321   1               - Enable PWM function
 322   1               - Disable toggle function
 323   1               ***********************************************************************/
 324   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 325   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 326   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 327   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 328   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 329   1      
 330   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 331   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 332   1      
 333   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 334   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 335   1      
 336   1              // $[Auto-reload]
 337   1              // [Auto-reload]$
 338   1      
 339   1              // $[PCA0 Settings Restore]
 340   1              // [PCA0 Settings Restore]$
 341   1      
 342   1      }
 343          
 344          extern void RTC_0_enter_DefaultMode_from_RESET(void) {
 345   1              // $[RTC Initialization]
 346   1              // [RTC Initialization]$
 347   1      
 348   1              // $[RTC0XCN0 - RTC Oscillator Control: Initial start-up setting]
 349   1              // [RTC0XCN0 - RTC Oscillator Control: Initial start-up setting]$
 350   1      
 351   1              // $[RTC0XCN - RTC Oscillator Control]
 352   1              // [RTC0XCN - RTC Oscillator Control]$
 353   1      
 354   1              // $[RTC0XCF - RTC Oscillator Configuration]
 355   1              /***********************************************************************
 356   1               - Disable load capacitance stepping
 357   1               - Load Capacitance Programmed Value = 0x07
 358   1               ***********************************************************************/
 359   1              RTC0ADR = RTC0XCF;
 360   1              RTC0DAT = RTC0XCF_AUTOSTP__DISABLED | (0x07 << RTC0XCF_LOADCAP__SHIFT);
 361   1              while ((RTC0ADR & RTC0ADR_BUSY__BMASK) == RTC0ADR_BUSY__SET)
 362   1                      ;    //Poll Busy Bit
 363   1              // [RTC0XCF - RTC Oscillator Configuration]$
 364   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 7   

 365   1              // $[CAPTURE0 - RTC Timer Capture 0]
 366   1              // [CAPTURE0 - RTC Timer Capture 0]$
 367   1      
 368   1              // $[CAPTURE1 - RTC Timer Capture 1]
 369   1              // [CAPTURE1 - RTC Timer Capture 1]$
 370   1      
 371   1              // $[CAPTURE2 - RTC Timer Capture 2]
 372   1              // [CAPTURE2 - RTC Timer Capture 2]$
 373   1      
 374   1              // $[CAPTURE3 - RTC Timer Capture 3]
 375   1              // [CAPTURE3 - RTC Timer Capture 3]$
 376   1      
 377   1              // $[ALARM0 - RTC Alarm Programmed Value 0]
 378   1              /***********************************************************************
 379   1               - RTC Alarm Programmed Value 0 = 0x14
 380   1               ***********************************************************************/
 381   1              RTC0ADR = ALARM0;
 382   1              RTC0DAT = (0x14 << ALARM0_ALARM0__SHIFT);
 383   1              while ((RTC0ADR & RTC0ADR_BUSY__BMASK) == RTC0ADR_BUSY__SET)
 384   1                      ;    //Poll Busy Bit
 385   1              // [ALARM0 - RTC Alarm Programmed Value 0]$
 386   1      
 387   1              // $[ALARM1 - RTC Alarm Programmed Value 1]
 388   1              // [ALARM1 - RTC Alarm Programmed Value 1]$
 389   1      
 390   1              // $[ALARM2 - RTC Alarm Programmed Value 2]
 391   1              // [ALARM2 - RTC Alarm Programmed Value 2]$
 392   1      
 393   1              // $[ALARM3 - RTC Alarm Programmed Value 3]
 394   1              // [ALARM3 - RTC Alarm Programmed Value 3]$
 395   1      
 396   1              // $[RTC0CN - RTC Control]
 397   1              /***********************************************************************
 398   1               - Enable RTC oscillator
 399   1               - RTC timer is stopped
 400   1               - Disable missing RTC detector
 401   1               - Disable RTC alarm
 402   1               - Alarm event flag is not set or disable the auto reset function
 403   1               - Do not start a capture operation
 404   1               - Do not start a set operation
 405   1               ***********************************************************************/
 406   1              RTC0ADR = RTC0CN0;
 407   1              RTC0DAT = RTC0CN0_RTC0EN__ENABLED | RTC0CN0_RTC0TR__STOP
 408   1                              | RTC0CN0_MCLKEN__DISABLED | RTC0CN0_RTC0AEN__DISABLED
 409   1                              | RTC0CN0_ALRM__NOT_SET | RTC0CN0_RTC0CAP__NOT_SET
 410   1                              | RTC0CN0_RTC0SET__NOT_SET;
 411   1              while ((RTC0ADR & RTC0ADR_BUSY__BMASK) == RTC0ADR_BUSY__SET)
 412   1                      ;    //Poll Busy Bit
 413   1      
 414   1              // [RTC0CN - RTC Control]$
 415   1      
 416   1              // $[External Oscillator Setup]
 417   1              // [External Oscillator Setup]$
 418   1      
 419   1      }
 420          
 421          extern void CSLIB_0_enter_DefaultMode_from_RESET(void) {
 422   1              // $[CSLIB Init]
 423   1      
 424   1              // -----------------------------------------------------------------------------
 425   1              // Configures all peripherals controlled by capsense, including the sensing block
 426   1              // and port pins
 427   1              // -----------------------------------------------------------------------------
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 8   

 428   1              CSLIB_initHardware();
 429   1      
 430   1              // -----------------------------------------------------------------------------
 431   1              // Initializes capsense variables and performs some scans to initialize the
 432   1              // baselines
 433   1              // -----------------------------------------------------------------------------
 434   1              CSLIB_initLibrary();
 435   1      
 436   1              // [CSLIB Init]$
 437   1      
 438   1      }
 439          
 440          extern void SiLabs_Startup(void) {
 441   1              // $[SiLabs Startup]
 442   1              /*
 443   1               // WDTE (Watchdog Timer Enable) = DISABLED (Disable Watchdog Timer.)
 444   1               */
 445   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
 446   1      
 447   1              // [SiLabs Startup]$
 448   1      
 449   1      }
 450          
 451          extern void VREG_0_enter_DefaultMode_from_RESET(void) {
 452   1      
 453   1      }
 454          
 455          extern void HFOSC_0_enter_DefaultMode_from_RESET(void) {
 456   1      
 457   1      }
 458          
 459          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 460   1      
 461   1              // $[Timer Initialization]
 462   1              //Save Timer Configuration
 463   1              uint8_t TCON_save;
 464   1              TCON_save = TCON;
 465   1              //Stop Timers
 466   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 467   1      
 468   1              // [Timer Initialization]$
 469   1      
 470   1              // $[TH0 - Timer 0 High Byte]
 471   1              // [TH0 - Timer 0 High Byte]$
 472   1      
 473   1              // $[TL0 - Timer 0 Low Byte]
 474   1              // [TL0 - Timer 0 Low Byte]$
 475   1      
 476   1              // $[TH1 - Timer 1 High Byte]
 477   1              /***********************************************************************
 478   1               - Timer 1 High Byte = 0xA9
 479   1               ***********************************************************************/
 480   1              TH1 = (0xA9 << TH1_TH1__SHIFT);
 481   1              // [TH1 - Timer 1 High Byte]$
 482   1      
 483   1              // $[TL1 - Timer 1 Low Byte]
 484   1              // [TL1 - Timer 1 Low Byte]$
 485   1      
 486   1              // $[Timer Restoration]
 487   1              //Restore Timer Configuration
 488   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 489   1      
 490   1              // [Timer Restoration]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 9   

 491   1      
 492   1      }
 493          
 494          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 495   1      
 496   1              // $[CKCON0 - Clock Control 0]
 497   1              /***********************************************************************
 498   1               - System clock divided by 12
 499   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 500   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 501   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 502   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 503   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 504   1               - Timer 1 uses the system clock
 505   1               ***********************************************************************/
 506   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 507   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 508   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 509   1                              | CKCON0_T1M__SYSCLK;
 510   1              // [CKCON0 - Clock Control 0]$
 511   1      
 512   1              // $[TMOD - Timer 0/1 Mode]
 513   1              /***********************************************************************
 514   1               - Mode 0, 13-bit Counter/Timer
 515   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 516   1               - Timer Mode
 517   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 518   1               - Timer Mode
 519   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 520   1               ***********************************************************************/
 521   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 522   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 523   1              // [TMOD - Timer 0/1 Mode]$
 524   1      
 525   1              // $[TCON - Timer 0/1 Control]
 526   1              /***********************************************************************
 527   1               - Start Timer 1 running
 528   1               ***********************************************************************/
 529   1              TCON |= TCON_TR1__RUN;
 530   1              // [TCON - Timer 0/1 Control]$
 531   1      
 532   1      }
 533          
 534          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
 535   1      
 536   1              // $[Timer Initialization]
 537   1              // Save Timer Configuration
 538   1              uint8_t TMR3CN0_TR3_save;
 539   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 540   1              // Stop Timer
 541   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 542   1              // [Timer Initialization]$
 543   1      
 544   1              // $[TMR3CN0 - Timer 3 Control]
 545   1              // [TMR3CN0 - Timer 3 Control]$
 546   1      
 547   1              // $[TMR3H - Timer 3 High Byte]
 548   1              /***********************************************************************
 549   1               - Timer 3 High Byte = 0xF9
 550   1               ***********************************************************************/
 551   1              TMR3H = (0xF9 << TMR3H_TMR3H__SHIFT);
 552   1              // [TMR3H - Timer 3 High Byte]$
 553   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 10  

 554   1              // $[TMR3L - Timer 3 Low Byte]
 555   1              /***********************************************************************
 556   1               - Timer 3 Low Byte = 0x7D
 557   1               ***********************************************************************/
 558   1              TMR3L = (0x7D << TMR3L_TMR3L__SHIFT);
 559   1              // [TMR3L - Timer 3 Low Byte]$
 560   1      
 561   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 562   1              /***********************************************************************
 563   1               - Timer 3 Reload High Byte = 0xF9
 564   1               ***********************************************************************/
 565   1              TMR3RLH = (0xF9 << TMR3RLH_TMR3RLH__SHIFT);
 566   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 567   1      
 568   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 569   1              /***********************************************************************
 570   1               - Timer 3 Reload Low Byte = 0x7D
 571   1               ***********************************************************************/
 572   1              TMR3RLL = (0x7D << TMR3RLL_TMR3RLL__SHIFT);
 573   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 574   1      
 575   1              // $[TMR3CN0]
 576   1              /***********************************************************************
 577   1               - Start Timer 3 running
 578   1               ***********************************************************************/
 579   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 580   1              // [TMR3CN0]$
 581   1      
 582   1              // $[Timer Restoration]
 583   1              // Restore Timer Configuration
 584   1              TMR3CN0 |= TMR3CN0_TR3_save;
 585   1              // [Timer Restoration]$
 586   1      
 587   1      }
 588          
 589          extern void FLASH_0_enter_DefaultMode_from_RESET(void) {
 590   1              // $[FLSCL - Flash Scale]
 591   1              /***********************************************************************
 592   1               - The system clock determines the flash read time
 593   1               ***********************************************************************/
 594   1              FLSCL = FLSCL_BYPASS__SYSCLK;
 595   1              // [FLSCL - Flash Scale]$
 596   1      
 597   1      }
 598          
 599          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 600   1              // $[PCA0 Settings Save]
 601   1              // Select Capture/Compare register)
 602   1              PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 603   1              // [PCA0 Settings Save]$
 604   1      
 605   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 606   1              /***********************************************************************
 607   1               - Disable negative edge capture
 608   1               - Disable CCF1 interrupts
 609   1               - Disable match function
 610   1               - 8 to 11-bit PWM selected
 611   1               - Disable positive edge capture
 612   1               - Enable comparator function
 613   1               - Enable PWM function
 614   1               - Disable toggle function
 615   1               ***********************************************************************/
 616   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 11  

 617   1                              | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT
 618   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 619   1                              | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 620   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 621   1      
 622   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 623   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 624   1      
 625   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 626   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
 627   1      
 628   1              // $[Auto-reload]
 629   1              // [Auto-reload]$
 630   1      
 631   1              // $[PCA0 Settings Restore]
 632   1              // [PCA0 Settings Restore]$
 633   1      
 634   1      }
 635          
 636          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 637   1              // $[SCON0 - UART0 Serial Port Control]
 638   1              /***********************************************************************
 639   1               - UART0 reception enabled
 640   1               ***********************************************************************/
 641   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 642   1              // [SCON0 - UART0 Serial Port Control]$
 643   1      
 644   1      }
 645          
 646          extern void RSTSRC_0_enter_DefaultMode_from_RESET(void) {
 647   1              // $[RSTSRC - Reset Source]
 648   1              /***********************************************************************
 649   1               - A power-on or supply monitor reset occurred
 650   1               - A missing clock detector reset occurred
 651   1               - A Comparator 0 reset did not occur
 652   1               - A RTC alarm or oscillator fail reset did not occur
 653   1               ***********************************************************************/
 654   1              RSTSRC = RSTSRC_PORSF__SET | RSTSRC_MCDRSF__SET | RSTSRC_C0RSEF__NOT_SET
 655   1                              | RSTSRC_RTC0RE__NOT_SET;
 656   1              // [RSTSRC - Reset Source]$
 657   1      
 658   1      }
 659          
 660          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 661   1              // $[EIE1 - Extended Interrupt Enable 1]
 662   1              // [EIE1 - Extended Interrupt Enable 1]$
 663   1      
 664   1              // $[EIP1 - Extended Interrupt Priority 1]
 665   1              // [EIP1 - Extended Interrupt Priority 1]$
 666   1      
 667   1              // $[IE - Interrupt Enable]
 668   1              /***********************************************************************
 669   1               - Enable each interrupt according to its individual mask setting
 670   1               - Disable external interrupt 0
 671   1               - Disable external interrupt 1
 672   1               - Disable all SPI0 interrupts
 673   1               - Disable all Timer 0 interrupt
 674   1               - Disable all Timer 1 interrupt
 675   1               - Disable Timer 2 interrupt
 676   1               - Enable UART0 interrupt
 677   1               ***********************************************************************/
 678   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 679   1                              | IE_ESPI0__DISABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
C51 COMPILER V9.53.0.0   INITDEVICE                                                        08/20/2017 03:15:11 PAGE 12  

 680   1                              | IE_ET2__DISABLED | IE_ES0__ENABLED;
 681   1              // [IE - Interrupt Enable]$
 682   1      
 683   1              // $[IP - Interrupt Priority]
 684   1              /***********************************************************************
 685   1               - External Interrupt 0 set to low priority level
 686   1               - External Interrupt 1 set to low priority level
 687   1               - SPI0 interrupt set to low priority level
 688   1               - Timer 0 interrupt set to low priority level
 689   1               - Timer 1 interrupt set to low priority level
 690   1               - Timer 2 interrupt set to low priority level
 691   1               - UART0 interrupt set to high priority level
 692   1               ***********************************************************************/
 693   1              IP = IP_PX0__LOW | IP_PX1__LOW | IP_PSPI0__LOW | IP_PT0__LOW | IP_PT1__LOW
 694   1                              | IP_PT2__LOW | IP_PS0__HIGH;
 695   1              // [IP - Interrupt Priority]$
 696   1      
 697   1              // $[EIE2 - Extended Interrupt Enable 2]
 698   1              // [EIE2 - Extended Interrupt Enable 2]$
 699   1      
 700   1              // $[EIP2 - Extended Interrupt Priority 2]
 701   1              // [EIP2 - Extended Interrupt Priority 2]$
 702   1      
 703   1      }
 704          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    255    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
