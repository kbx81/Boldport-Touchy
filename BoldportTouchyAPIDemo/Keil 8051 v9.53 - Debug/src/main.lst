C51 COMPILER V9.53.0.0   MAIN                                                              07/10/2017 21:21:03 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\main.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\kburzin
                    -ski\SimplicityStudio\v4_workspace\BoldportTouchyAPIDemo\src\main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL
                    -(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kburzinski\SimplicitySt
                    -udio\v4_workspace\BoldportTouchyAPIDemo\inc\config;C:/Users/kburzinski/SimplicityStudio/v4_workspace/BoldportTouchyAPIDe
                    -mo/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/shared/si8051base;C:/SiliconLabs/Simplicity
                    -Studio/v4/developer/sdks/8051/v4.0.4//Device/EFM8SB1/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//
                    -Lib/efm8_capsense;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/EFM8SB1/efm8_capsense/device_lay
                    -er) PRINT(.\src\main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\main.OBJ)

line level    source

   1          /**
   2           * @file main.c
   3           * @author Keith Burzinski kbx81x@gmail.com @kbx81
   4           * @date 2017-07-08
   5           */
   6          #include "main.h"
   7          #include "touchy.h"
   8          #include "stdlib.h"
   9          
  10          // $[Generated Includes]
  11          #include "cslib_config.h"
  12          #include "cslib.h"
  13          // [Generated Includes]$
  14          
  15          
  16          /**
  17           * MUX_VALUE_ARRAY In inc/config/cslib_hwconfig.h should be set to this when updating the configurator
  18           */
  19          // #define MUX_VALUE_ARRAY 0x0A, 0x0B, 0x0C, 0x02, 0x01, 0x09, 0x03, 0x06, 0x0D,
  20          
  21          #define DELAY_LENGTH 70000
  22          
  23          /**
  24           * @brief main program
  25           */
  26          int main(void) {
  27   1              // call hardware initialization routine
  28   1              enter_DefaultMode_from_RESET();
  29   1              Tick_Init();
  30   1      
  31   1              // enable all interrupts
  32   1              IE |= IE_EA__ENABLED | IE_ET2__ENABLED;
  33   1      
  34   1              // blink LEDs at startup...just because it's fun
  35   1              TouchyLEDOn(LED3 | LED4);
  36   1              SimpleDelay(DELAY_LENGTH);
  37   1      
  38   1              TouchyLEDOn(LED2 | LED3 | LED4 | LED5);
  39   1              SimpleDelay(DELAY_LENGTH);
  40   1      
  41   1              TouchyLEDOn(LED1 | LED2 | LED3 | LED4 | LED5 | LED6);
  42   1              TouchySetLEDIntensity(LED1 | LED6, 255);
  43   1              SimpleDelay(DELAY_LENGTH);
  44   1      
  45   1              TouchyLEDOff(LED1 | LED2 | LED3 | LED4 | LED5 | LED6);
  46   1              TouchySetLEDIntensity(LED1 | LED6, 0);
  47   1      
  48   1              // main application loop
  49   1              while (1) {
C51 COMPILER V9.53.0.0   MAIN                                                              07/10/2017 21:21:03 PAGE 2   

  50   2      // $[Generated Run-time code]
  51   2                      // -----------------------------------------------------------------------------
  52   2                      // If low power features are enabled, this will either put the device into a low
  53   2                      // power state until it is time to take another scan, or put the device into a
  54   2                      // low-power sleep mode if no touches are active
  55   2                      // -----------------------------------------------------------------------------
  56   2                      CSLIB_lowPowerUpdate();
  57   2      
  58   2                      // -----------------------------------------------------------------------------
  59   2                      // Performs all scanning and data structure updates
  60   2                      // -----------------------------------------------------------------------------
  61   2                      CSLIB_update();
  62   2      
  63   2      // [Generated Run-time code]$
  64   2                      TouchyButtonRefresh();
  65   2      
  66   2                      if (TouchySleepNow()) {
  67   3                              TouchySleepLEDs();
  68   3                      }
  69   2                      else {
  70   3                              UpdateLed(TouchyReadSlider());
  71   3                              TouchyLEDToggle(TouchyGetPressedButtons() & (LED2 | LED3 | LED4 | LED5));
  72   3      
  73   3                              if (TouchyGetPressedButtons() & BUTTON1) {
  74   4                                      TouchyLEDToggle(LED2 | LED3 | LED4 | LED5);
  75   4                                      TouchySetLEDIntensity(LED1, 255 - TouchyReadLEDIntensity(LED1));
  76   4                                      TouchySetLEDIntensity(LED6, 255 - TouchyReadLEDIntensity(LED6));
  77   4                              }
  78   3      
  79   3                              if (TouchyGetPressedButtons() & BUTTON6) {
  80   4                                      if (TouchyReadLEDs() || TouchyReadLEDIntensity(LED1) || TouchyReadLEDIntensity(LED6)) {
  81   5                                              TouchyLEDOff(LED1 | LED2 | LED3 | LED4 | LED5 | LED6);
  82   5                                              TouchySetLEDIntensity(LED1 | LED6, 0);
  83   5                                      }
  84   4                                      else {
  85   5                                              TouchyLEDOn(LED1 | LED2 | LED3 | LED4 | LED5 | LED6);
  86   5                                              TouchySetLEDIntensity(LED1 | LED6, 255);
  87   5                                      }
  88   4                              }
  89   3                      }
  90   2              }
  91   1      }
  92          
  93          
  94          // Update the LED brightness based on angle
  95          // angle [0, 359] => intensity [0, 255]
  96          void UpdateLed(uint16_t angle)
  97          {
  98   1              static uint8_t lastIntensity = 0;
  99   1      
 100   1              // 256 / 360 reduces to 32 / 45
 101   1              uint8_t intensity = angle * 32 / 45;
 102   1      
 103   1              if (intensity != lastIntensity) {
 104   2                      TouchySetLEDIntensity(LED1, intensity);
 105   2                      TouchySetLEDIntensity(LED6, 255-intensity);
 106   2                      lastIntensity = intensity;
 107   2              }
 108   1      }
 109          
 110          
 111          // Create a simple delay
 112          void SimpleDelay(uint32_t delayLen)
C51 COMPILER V9.53.0.0   MAIN                                                              07/10/2017 21:21:03 PAGE 3   

 113          {
 114   1              volatile uint32_t i = 0;
 115   1      
 116   1              for (i = 0; i < delayLen; i++)
 117   1              {
 118   2              }
 119   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    308    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
