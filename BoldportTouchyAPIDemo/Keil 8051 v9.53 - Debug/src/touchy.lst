C51 COMPILER V9.53.0.0   TOUCHY                                                            07/10/2017 21:21:04 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE TOUCHY
OBJECT MODULE PLACED IN .\src\touchy.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\kburzin
                    -ski\SimplicityStudio\v4_workspace\BoldportTouchyAPIDemo\src\touchy.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEV
                    -EL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\kburzinski\Simplicity
                    -Studio\v4_workspace\BoldportTouchyAPIDemo\inc\config;C:/Users/kburzinski/SimplicityStudio/v4_workspace/BoldportTouchyAPI
                    -Demo/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/shared/si8051base;C:/SiliconLabs/Simplici
                    -tyStudio/v4/developer/sdks/8051/v4.0.4//Device/EFM8SB1/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4
                    -//Lib/efm8_capsense;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.0.4//Device/EFM8SB1/efm8_capsense/device_l
                    -ayer) PRINT(.\src\touchy.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\touchy.OBJ)

line level    source

   1          /**
   2           * @file touchy.c
   3           * @author Keith Burzinski kbx81x@gmail.com @kbx81
   4           * @date 2017-07-08
   5           */
   6          #include <SI_EFM8SB1_Register_Enums.h>
   7          #include "touchy.h"
   8          #include "circle_slider.h"
   9          
  10          #include "cslib_config.h"
  11          #include "cslib.h"
  12          
  13          /**
  14           * define the LED pins
  15           */
  16          SI_SBIT (LED1pin, SFR_P0, 0);
  17          SI_SBIT (LED2pin, SFR_P2, 7);
  18          SI_SBIT (LED3pin, SFR_P1, 6);
  19          SI_SBIT (LED4pin, SFR_P1, 7);
  20          SI_SBIT (LED5pin, SFR_P1, 0);
  21          SI_SBIT (LED6pin, SFR_P0, 7);
  22          
  23          static volatile uint8_t ledState = 0, intensity1 = 0, intensity2 = 0, buttonState = 0, previousButtonState
             - = 0, buttonsChanged = 0, sleepCounter = 0;
  24          static volatile uint16_t angle = 0, previousAngle = 0;
  25          
  26          
  27          uint8_t TouchyReadLEDs(void)
  28          {
  29   1              return ledState;
  30   1      }
  31          
  32          
  33          void TouchySetLEDs(uint8_t leds)
  34          {
  35   1              // Make sure only existing LEDs are specified
  36   1              leds &= (1 << LED_COUNT) - 1;
  37   1      
  38   1              // Update the saved state of all LEDs with the requested changes.
  39   1              ledState = leds;
  40   1      
  41   1              TouchyLEDRefresh();
  42   1      }
  43          
  44          
  45          void TouchyLEDOff(uint8_t leds)
  46          {
  47   1              // Update the saved state of all LEDs with the requested changes
  48   1              ledState &= ~leds;
C51 COMPILER V9.53.0.0   TOUCHY                                                            07/10/2017 21:21:04 PAGE 2   

  49   1      
  50   1              TouchyLEDRefresh();
  51   1      }
  52          
  53          
  54          void TouchyLEDOn(uint8_t leds)
  55          {
  56   1              // Make sure only existing LEDs are specified
  57   1              leds &= (1 << LED_COUNT) - 1;
  58   1      
  59   1              // Update the saved state of all LEDs with the requested changes
  60   1              ledState |= leds;
  61   1      
  62   1              TouchyLEDRefresh();
  63   1      }
  64          
  65          
  66          void TouchyLEDToggle(uint8_t leds)
  67          {
  68   1              // Make sure only existing LEDs are specified
  69   1              leds &= (1 << LED_COUNT) - 1;
  70   1      
  71   1              // Update the saved state of all LEDs with the requested changes
  72   1              ledState = (~ledState & leds) | (ledState & ~leds);
  73   1      
  74   1              TouchyLEDRefresh();
  75   1      }
  76          
  77          
  78          void TouchySetLEDIntensity(uint8_t leds, uint8_t intensity)
  79          {
  80   1              if (leds & LED1)
  81   1              {
  82   2                      intensity1 = intensity;
  83   2                      if (intensity == 255)
  84   2                      {
  85   3                              PCA0CPM0 &= ~PCA0CPM0_ECOM__ENABLED;
  86   3                      }
  87   2              }
  88   1      
  89   1              if (leds & LED6)
  90   1              {
  91   2                      intensity2 = intensity;
  92   2                      if (intensity == 255)
  93   2                      {
  94   3                              PCA0CPM1 &= ~PCA0CPM1_ECOM__ENABLED;
  95   3                      }
  96   2              }
  97   1      
  98   1              TouchyLEDRefresh();
  99   1      }
 100          
 101          
 102          uint8_t TouchyReadLEDIntensity(uint8_t leds)
 103          {
 104   1              uint8_t intensity = 0;
 105   1      
 106   1              if (leds & LED1)
 107   1              {
 108   2                      intensity = intensity1;
 109   2              }
 110   1      
 111   1              if (leds & LED6)
C51 COMPILER V9.53.0.0   TOUCHY                                                            07/10/2017 21:21:04 PAGE 3   

 112   1              {
 113   2                      intensity = intensity2;
 114   2              }
 115   1      
 116   1              return intensity;
 117   1      }
 118          
 119          
 120          void TouchySleepLEDs(void)
 121          {
 122   1              LED1pin = LED2pin = LED3pin = LED4pin = LED5pin = LED6pin = true;
 123   1              PCA0CPH0 = PCA0CPH1 = 0;
 124   1      
 125   1              return;
 126   1      }
 127          
 128          
 129          void TouchyLEDRefresh(void)
 130          {
 131   1              LED1pin = !((ledState >> 0) & 0x01);
 132   1              LED2pin = !((ledState >> 1) & 0x01);
 133   1              LED3pin = !((ledState >> 2) & 0x01);
 134   1              LED4pin = !((ledState >> 3) & 0x01);
 135   1              LED5pin = !((ledState >> 4) & 0x01);
 136   1              LED6pin = !((ledState >> 5) & 0x01);
 137   1      
 138   1              PCA0CPH0 = intensity1;
 139   1              PCA0CPH1 = intensity2;
 140   1      }
 141          
 142          
 143          void TouchyButtonRefresh(void)
 144          {
 145   1              buttonState = 0;
 146   1      
 147   1              if (CSLIB_isSensorSingleActive(TS_B1)) {
 148   2                      buttonState |= BUTTON1;
 149   2              }
 150   1      
 151   1              if (CSLIB_isSensorSingleActive(TS_B2)) {
 152   2                      buttonState |= BUTTON2;
 153   2              }
 154   1      
 155   1              if (CSLIB_isSensorSingleActive(TS_B3)) {
 156   2                      buttonState |= BUTTON3;
 157   2              }
 158   1      
 159   1              if (CSLIB_isSensorSingleActive(TS_B4)) {
 160   2                      buttonState |= BUTTON4;
 161   2              }
 162   1      
 163   1              if (CSLIB_isSensorSingleActive(TS_B5)) {
 164   2                      buttonState |= BUTTON5;
 165   2              }
 166   1      
 167   1              if (CSLIB_isSensorSingleActive(TS_B6)) {
 168   2                      buttonState |= BUTTON6;
 169   2              }
 170   1      
 171   1              buttonsChanged = buttonState ^ previousButtonState;
 172   1              previousButtonState = buttonState;
 173   1      
 174   1              if (buttonState) {
C51 COMPILER V9.53.0.0   TOUCHY                                                            07/10/2017 21:21:04 PAGE 4   

 175   2                      sleepCounter = 0;
 176   2              }
 177   1      
 178   1              // Check if sum of sensors is above a minimum threshold for better touch release behavior
 179   1              if (IsTouchQualified())
 180   1              {
 181   2                      previousAngle = angle;
 182   2      
 183   2                      // Perform the centroid algorithm to determine the wheel angle position
 184   2                      // (0 degrees is 12 o'clock, 90 degrees is 3 o'clock)
 185   2                      angle = CalculatePosition();
 186   2      
 187   2                      sleepCounter = 0;
 188   2              }
 189   1      
 190   1              sleepCounter++;
 191   1      }
 192          
 193          
 194          uint8_t TouchyReadButtons(void)
 195          {
 196   1              return buttonState;
 197   1      }
 198          
 199          
 200          uint8_t TouchyGetChangedButtons(void)
 201          {
 202   1              return buttonsChanged;
 203   1      }
 204          
 205          
 206          uint8_t TouchyGetPressedButtons(void)
 207          {
 208   1              return buttonState & buttonsChanged;
 209   1      }
 210          
 211          
 212          uint8_t TouchyGetReleasedButtons(void)
 213          {
 214   1              return ~buttonState & buttonsChanged;
 215   1      }
 216          
 217          
 218          uint16_t TouchyReadSlider(void)
 219          {
 220   1              return angle;
 221   1      }
 222          
 223          
 224          bool TouchySleepNow(void)
 225          {
 226   1              if (sleepCounter >= DEF_COUNTS_BEFORE_SLEEP) {
 227   2                      return true;
 228   2              }
 229   1      
 230   1              return false;
 231   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    322    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.53.0.0   TOUCHY                                                            07/10/2017 21:21:04 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
